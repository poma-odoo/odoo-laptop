- name: "Main playbook for the laptop"
  hosts: poma-laptop

  vars:
    username: poma
    systemwide_env:
      - key: EDITOR
        value: vim
      - key: BROWSER
        value: google-chrome-stable
      # make java programs (I mean jetbrains) work with wayland
      - key: _JAVA_AWT_WM_NONREPARENTING
        value: '1'

    command_aliases:
      - alias: ap
        command: 'sudo ansible-playbook'
      - alias: adm
        command: 'ansible-doc -t module'
      - alias: top
        command: 'top -o %MEM'
      - alias: code
        command: 'vscodium'

  tasks:
    - name: Ensure main user's access groups
      ansible.builtin.user:
        name: '{{ username }}'
        create_home: true
        generate_ssh_key: true
        ssh_key_type: ed25519
        group: '{{ username }}'
        groups:
          - sudo
        append: true
      become: true
      register: user
      tags:
        - always

    - name: Set current user sudo nopassword
      community.general.sudoers:
        name: '90-{{ user.name }}'
        nopassword: true
        user: '{{ user.name }}'
        commands: ALL

    - name: Create the `aur_builder` user
      ansible.builtin.user:
        name: aur_builder
        create_home: true
        group: wheel
      become: true
      tags:
        - packages

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: true
        mode: 0440
        validate: 'visudo -cf %s'
      become: true
      tags:
        - packages

    - name: "Install AUR package manager yay"
      ansible.builtin.package:
        name:
          - yay
        state: present
      become: true
      tags:
        - packages


    - name: 'Install Multimedia packages'
      ansible.builtin.package:
        name:
          - mpv
          - ffmpeg
          - youtube-dl
        state: present
      become: true
      tags:
        - packages

    - name: 'Install extra Multimedia packages '
      kewlfft.aur.aur:
        name:
          - sbagen
        use: yay
        state: present
      become: true
      become_user: aur_builder
      tags:
        - packages

    - name: 'Install connectivity packages'
      ansible.builtin.package:
        name:
          - kdeconnect
          - blueberry
      become: true
      tags:
        - packages

    - name: 'Install development base packages'
      ansible.builtin.package:
        name:
          - nodejs
          - gettext
      become: true
      tags:
        - packages
        - dev

    - name: 'Install development tools packages'
      ansible.builtin.package:
        name:
          - git
          - pycharm-community-edition
          - plantuml
          - vscodium-bin
          - vim-ansible
          - ansible-lint
      become: true
      tags:
        - packages
        - dev

    - name: 'Install utility packages'
      ansible.builtin.package:
        name:
          - gimp
          - vim
          - libsecret
          - keepassxc
          - mc
          - wl-clipboard
      become: true
      tags:
        - packages

    - name: 'Install docker'
      ansible.builtin.package:
        name:
          - docker
          - docker-compose

    - name: 'Add user to the docker group'
      ansible.builtin.user:
        name: "{{ user.name }}"
        groups: docker
        append: true
      notify: 'Message about docker group'

    - name: 'Install qemu based vistualizasion'
      ansible.builtin.package:
        name:
          - libvirt
          - bridge-utils
          - qemu-full
          - virt-install
          - virt-viewer
      become: true
      tags:
        - packages
        - virt
        - lab

  # - name: 'Init libvirt Network'
  #    community.libvirt.virt_net:
  #      command: define
  #      name: virnet0
  #      xml: '{{ lookup("template", "templates/virt/network.xml.j2") }}'
  #      Instead enable default network
  #    tags:
  #      - packages
  #      - virt

    - name: 'Prepare for virtualbox installation'
      ansible.builtin.package:
        name:
          - virtualbox-host-dkms
        state: absent
      tags:
        - packages
        - virt

    - name: 'Install virtualbox'
      ansible.builtin.package:
        name:
          - virtualbox
          - virtualbox-host-modules-arch
      tags:
        - packages
        - virt

    - name: 'Load vistualbox kernel module'
      community.general.modprobe:
        name: vboxdrv
      tags:
        - packages
        - virt

    - name: 'Setup environment variables'
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      with_items: "{{ systemwide_env }}"
      tags:
        - config

    - name: 'Setup command aliases'
      ansible.builtin.lineinfile:
        dest: "{{ user['home'] }}/.bashrc"
        state: present
        line: "alias {{ item.alias }}='{{ item.command }}'"
        insertafter: "^alias .*="
        firstmatch: true
      with_items: "{{ command_aliases }}"
      tags:
        - config


    - name: 'Install cipboard Manager'
      kewlfft.aur.aur:
        name:
          - clipman
        use: yay
        state: present
      become: true
      become_user: aur_builder
      tags:
        - config
        - sway
        - packages

    - name: 'Clear sway default config'
      ansible.builtin.file:
        path: "{{ user['home'] }}/.config/sway/config.d"
        state: absent
      tags:
        - config
        - sway

    - name: 'Recreate  sway config folder'
      ansible.builtin.file:
        path: "{{ user['home'] }}/.config/sway/config.d"
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0755'
      tags:
        - config
        - sway

    - name: 'Setup sway config'
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ user['home'] }}/.config/sway/config.d/{{ item | basename | regex_replace('\\.j2$', '') }}"
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0640'
      with_fileglob:
        - "templates/sway/*.j2"
      tags:
        - config
        - sway

    - name: 'Ensure sway config folder is loaded'
      ansible.builtin.lineinfile:
        dest: "{{ user['home'] }}/.config/sway/config"
        create: true
        owner: '{{ username }}'
        mode: '0640'
        state: present
        line: "include $HOME/.config/sway/config.d/*"
      tags:
        - config
        - sway

      #    - name: 'Setup sway config lock screen'
      #      ansible.builtin.blockinfile:
      #        dest: "{{ user['home'] }}/.config/sway/config.d/10-lock"
      #        create: true
      #        owner: '{{ username }}'
      #        state: present
      #        line: "{{ item }}"
      #      with_items:
      #        - set $mod Mod4
      #        - set $left h
      #        - set $down j
      #        - set $up k
      #        - set $right l
  handlers:
    - name: 'Message about docker group'
      ansible.builtin.debug:
        msg: "You have been added to docker group, don't forget to logoff/on or run newgrp"
