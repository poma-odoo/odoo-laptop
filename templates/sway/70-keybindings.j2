# This file is handled by ansible, the local changes will be overiden

{% set directions = ['left', 'right', 'up', 'down'] %}
### Key bindings

$bindsym {
#
# Basics:
#
    # Start a floating terminal
    $mod+Return exec $term-float

    # Open the power menu
    $mod+Shift+e exec $powermenu

    # Kill focused window
    $mod+q kill

    # Start your launcher
    $mod+d exec $menu

    # Activities
    $mod+p exec ~/.config/wofi/windows.py

    # Reload the configuration file
    $mod+Shift+c reload

    # Lock Screen (required 30-lockscreen)
    $mod+f1 exec $lockme

#
# Moving around:
#
    # Move your focus around
{% for d in directions%}
    $mod+${{ d }} focus {{ d }}
    $mod+{{ d | capitalize }} focus {{ d }}
{% endfor %}


    # Move the focused window with the same, but add Shift
{% for d in directions%}
    $mod+Shift+${{ d }} move {{ d }}
    $mod+Shift+{{ d | capitalize }} move {{ d }}
{% endfor %}

#
# Workspaces:
#
    # Switch to workspace
{% for ws in range(1,11)%}
    $mod+{{ ws % 10 }} workspace number {{ ws }}
{% endfor %}

    # Move focused container to workspace
{% for ws in range(1,11)%}
    $mod+Shift+{{ ws % 10 }} move container to workspace number {{ ws }}
{% endfor %}

    # moving workspaces 
{% for d in directions%}
    $mod+Control+${{ d }} move workspace to output {{ d }}
    $mod+Control+{{ d | capitalize }} move workspace to output {{ d }}
{% endfor %}

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+x layout toggle split

    # Make the current focus fullscreen
    $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle

    # Move focus to the parent container
    $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show

#
# Player
#
    XF86AudioPlay exec playerctl play
    XF86AudioPause exec playerctl pause
    XF86AudioNext exec playerctl next
    XF86AudioPrev exec playerctl previous

#
# Backlight
#
    XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-

#
# App shortcuts
#
    $mod+e exec thunar

#
# Screenshots
#
    print exec /usr/share/sway/scripts/grimshot --notify save output
    Shift+print exec ~/.config/sway/scripts/screenshot.sh
}

$bindsym --locked {
#
# Volume
#
    # Control volume trough pamixer
    # bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2
    # bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2
    # bindsym --locked XF86AudioMute exec pamixer -t
    
    # Control volume directly trough pactl
      XF86AudioRaiseVolume exec $volume_up
      XF86AudioLowerVolume exec $volume_down
      XF86AudioMute exec $volume_mute
}


#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # add shift to move the floating window in this mode
    $bindsym {
     $left  resize shrink width
     Left  resize shrink width 
     $right resize grow width 
     Right resize grow width 
     $up    resize shrink height
     Up    resize shrink height
     $down  resize grow height 
     Down  resize grow height 

{% for d in directions%}
     Shift+${{ d }} move {{ d }}
     Shift+{{ d | capitalize }} move {{ d }}
{% endfor %}

    # Return to default mode
     Return mode "default"
     Escape mode "default"
    }
}

$bindsym $mod+r mode "resize"

